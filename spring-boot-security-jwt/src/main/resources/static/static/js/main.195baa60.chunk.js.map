{"version":3,"sources":["reducers/auth-reducers/auth.js","reducers/message-reducers/message.js","reducers/tutorial-reducers/tutorials.js","actions/tutorial-actions/types.js","reducers/tutorial-reducers/isDisplayForm.js","reducers/tutorial-reducers/itemEditing.js","reducers/tutorial-reducers/filterTable.js","reducers/tutorial-reducers/sortTutorial.js","reducers/index.js","actions/auth-actions/types.js","store.js","services/auth.service.js","components/auth-components/login.component.js","actions/auth-actions/auth.js","components/auth-components/register.component.js","services/auth-header.js","services/user.service.js","components/auth-components/home.component.js","components/auth-components/profile.component.js","common/EventBus.js","components/auth-components/board-user.component.js","components/auth-components/board-moderator.component.js","components/auth-components/board-admin.component.js","services/tutorial.service.js","actions/tutorial-actions/tutorials.js","components/tutorial-components/tutorial-Item.js","components/tutorial-components/tutorial-list.js","components/tutorial-components/tutorial-form.js","components/tutorial-components/tutorial-search.js","components/tutorial-components/tutorial-sort.js","components/tutorial-components/tutorial-control.js","components/tutorial-components/tutorial.js","helpers/history.js","App.js","actions/auth-actions/message.js","serviceWorker.js","index.js"],"names":["user","JSON","parse","localStorage","getItem","initialState","isLoggedIn","tutorialReducer","tutorials","action","type","payload","map","tutorial","id","filter","isDisplayFormReducer","state","name","status","myReducer","parseInt","by","value","sort","combineReducers","auth","message","isDisplayForm","itemEditing","filterTable","sortTutorial","middleware","thunk","store","createStore","rootReducer","composeWithDevTools","applyMiddleware","username","password","axios","post","API_URL","then","response","data","accessToken","setItem","stringify","removeItem","email","required","className","role","Login","props","handleLogin","bind","onChangeUsername","onChangePassword","loading","e","this","setState","target","preventDefault","form","validateAll","dispatch","history","checkBtn","context","_errors","length","AuthService","login","Promise","resolve","error","toString","reject","push","window","location","reload","catch","to","src","alt","onSubmit","ref","c","htmlFor","onChange","validations","disabled","style","display","Component","connect","isEmail","vusername","vpassword","Register","handleRegister","onChangeEmail","successful","register","authHeader","Authorization","get","headers","Home","content","UserService","getPublicContent","Profile","currentUser","substring","substr","roles","index","key","eventBus","on","event","callback","document","addEventListener","detail","dispatchEvent","CustomEvent","remove","removeEventListener","BoardUser","getUserBoard","EventBus","BoardModerator","getModeratorBoard","BoardAdmin","getAdminBoard","put","delete","title","retrieveTutorials","a","TutorialDataService","getAll","res","console","log","updateTutorial","update","TutorialItem","onEditTask","openForm","editTutorial","onDeleteTutorial","deleteTutorial","findIndex","result","forEach","onUpdateStatus","showModeratorBoard","showAdminBoard","includes","onClick","TutorialList","componentDidMount","filterName","filterStatus","filterTutorial","toLowerCase","indexOf","b","elmTutorials","TutorialForm","createTutorial","onClear","onCloseForm","closeForm","nextProps","create","TutorialSearch","clearKeyword","keyword","findByTitle","findTutorialsByTitle","placeholder","TutorialSort","sortBy","sortValue","data-toggle","aria-labelledby","button","TutorialControl","Tutorial","onToggleForm","toggleForm","createBrowserHistory","App","logOut","undefined","listen","logout","href","exact","path","component","Boolean","hostname","match","ReactDOM","render","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.195baa60.chunk.js","sourcesContent":["import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n}\nfrom \"./../../actions/auth-actions/types.js\";\n\nconst user = JSON.parse(localStorage.getItem(\"user\"));\n\nconst initialState = user\n  ? { isLoggedIn: true, user }\n  : { isLoggedIn: false, user: null };\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case REGISTER_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case REGISTER_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n      };\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        isLoggedIn: true,\n        user: payload.user,\n      };\n    case LOGIN_FAIL:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    case LOGOUT:\n      return {\n        ...state,\n        isLoggedIn: false,\n        user: null,\n      };\n    default:\n      return state;\n  }\n}\n","import { SET_MESSAGE, CLEAR_MESSAGE \n} \nfrom \"./../../actions/auth-actions/types.js\";\n\nconst initialState = {};\n\nexport default function (state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_MESSAGE:\n      return { message: payload };\n\n    case CLEAR_MESSAGE:\n      return { message: \"\" };\n\n    default:\n      return state;\n  }\n}\n","import {\n  CREATE_TUTORIAL,\n  RETRIEVE_TUTORIALS,\n  UPDATE_TUTORIAL,\n  DELETE_TUTORIAL,\n} from \"./../../actions/tutorial-actions/types\";\n\nconst initialState = [];\n\nfunction tutorialReducer(tutorials = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case CREATE_TUTORIAL:\n      return [...tutorials, payload];\n\n    case RETRIEVE_TUTORIALS:\n      return payload;\n\n    case UPDATE_TUTORIAL:\n      return tutorials.map((tutorial) => {\n        if (tutorial.id === payload.id) {\n          return {\n            ...tutorial,\n            ...payload,\n          };\n        } else {\n          return tutorial;\n        }\n      });\n\n    case DELETE_TUTORIAL:\n      return tutorials.filter(({ id }) => id !== payload.id);\n\n    default:\n      return tutorials;\n  }\n}\n\nexport default tutorialReducer;\n","export const CREATE_TUTORIAL = \"CREATE_TUTORIAL\";\nexport const RETRIEVE_TUTORIALS = \"RETRIEVE_TUTORIALS\";\nexport const UPDATE_TUTORIAL = \"UPDATE_TUTORIAL\";\nexport const UPDATE_STATUS = \"UPDATE_STATUS\";\nexport const DELETE_TUTORIAL = \"DELETE_TUTORIAL\";\nexport const TOGGLE_FORM = 'TOGGLE_FORM';\nexport const CLOSE_FORM = 'CLOSE_FORM';\nexport const OPEN_FORM = 'OPEN_FORM';\nexport const EDIT_TASK = 'EDIT_TASK';\nexport const FILTER_TABLE = 'FILTER_TABLE';\nexport const SORT_TUTORIAL = 'SORT_TUTORIAL';\n\n\n// export const DELETE_ALL_TUTORIALS = \"DELETE_ALL_TUTORIALS\";","import {\n  TOGGLE_FORM,\n  CLOSE_FORM,\n  OPEN_FORM,\n} from \"./../../actions/tutorial-actions/types\";\n\nvar initialState = false;\n\nvar isDisplayFormReducer = (state = initialState, action) => {\n  switch (action.type) {\n    case TOGGLE_FORM:\n      return !state;\n    case OPEN_FORM:\n      return true;\n    case CLOSE_FORM:\n      return false;\n    default:\n      return state;\n  }\n};\n\nexport default isDisplayFormReducer;\n","import {\n\tEDIT_TASK\n} from \"./../../actions/tutorial-actions/types\";\n\nvar initialState = {\n\tid: '',\n    name: '',\n    status: false\n};\n\nvar myReducer = (state = initialState, action ) => {\n\n\tconst { type, payload } = action;\n\t\n\tswitch(type){\n\t\tcase EDIT_TASK:\n\t\t\treturn payload;\n\t\t\t\n\t\tdefault: return state;\n\t}\n};\n\nexport default myReducer;","import {\n\tFILTER_TABLE\n} from \"./../../actions/tutorial-actions/types\";\n\nvar initialState = {\n\tname: '',\n    status: -1\n};\n\nvar myReducer = (state = initialState, action ) => {\n\n\tswitch(action.type){\n\t\tcase FILTER_TABLE:\n\t\t\treturn {\n\t\t\t\tname: action.filter.name,\n\t\t\t\tstatus: parseInt(action.filter.status, 10)\n\t\t\t}\n\t\tdefault: return state;\n\t}\n};\n\nexport default myReducer;","import {\n\tSORT_TUTORIAL\n} from \"./../../actions/tutorial-actions/types\";\n\nvar initialState = {\n\tby: 'name',\n    value: 1\n};\n\nvar myReducer = (state = initialState, action ) => {\n\n\tswitch(action.type){\n\t\tcase SORT_TUTORIAL:\n\t\t\treturn {\n\t\t\t\tby: action.sort.by,\n\t\t\t\tvalue: action.sort.value\n\t\t\t}\n\t\tdefault: return state;\n\t}\n};\n\nexport default myReducer;","import { combineReducers } from \"redux\";\nimport auth from \"./auth-reducers/auth\";\nimport message from \"./message-reducers/message\";\nimport tutorials from \"./tutorial-reducers/tutorials\";\nimport isDisplayForm from \"./tutorial-reducers/isDisplayForm\";\nimport itemEditing from \"./tutorial-reducers/itemEditing\";\nimport filterTable from \"./tutorial-reducers/filterTable\";\nimport sortTutorial from \"./tutorial-reducers/sortTutorial\";\n\nexport default combineReducers({\n  auth,\n  message,\n  tutorials,\n  isDisplayForm,\n  itemEditing,\n  filterTable,\n  sortTutorial\n});\n","export const REGISTER_SUCCESS = \"REGISTER_SUCCESS\";\nexport const REGISTER_FAIL = \"REGISTER_FAIL\";\nexport const LOGIN_SUCCESS = \"LOGIN_SUCCESS\";\nexport const LOGIN_FAIL = \"LOGIN_FAIL\";\nexport const LOGOUT = \"LOGOUT\";\n\nexport const SET_MESSAGE = \"SET_MESSAGE\";\nexport const CLEAR_MESSAGE = \"CLEAR_MESSAGE\";\n","import { createStore, applyMiddleware } from \"redux\";\nimport { composeWithDevTools } from \"redux-devtools-extension\";\nimport thunk from \"redux-thunk\";\nimport rootReducer from \"./reducers\";\n\nconst middleware = [thunk];\nconst initialState = {};\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\nexport default store;\n","import axios from \"axios\";\n\nconst API_URL = \"/api/auth/\";\n\nclass AuthService {\n  login(username, password) {\n    return axios\n      .post(API_URL + \"signin\", { username, password })\n      .then((response) => {\n        if (response.data.accessToken) {\n          localStorage.setItem(\"user\", JSON.stringify(response.data));\n        }\n\n        return response.data;\n      });\n  }\n\n  logout() {\n    localStorage.removeItem(\"user\");\n  }\n\n  register(username, email, password) {\n    return axios.post(API_URL + \"signup\", {\n      username,\n      email,\n      password,\n    });\n  }\n}\n\nexport default new AuthService();\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\n\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\n\nimport { connect } from \"react-redux\";\nimport { login } from \"../../actions/auth-actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nclass Login extends Component {\n  constructor(props) {\n    super(props);\n    this.handleLogin = this.handleLogin.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      password: \"\",\n      loading: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleLogin(e) {\n    e.preventDefault();\n\n    this.setState({\n      loading: true,\n    });\n\n    this.form.validateAll();\n\n    const { dispatch, history } = this.props;\n\n    if (this.checkBtn.context._errors.length === 0) {\n      dispatch(login(this.state.username, this.state.password))\n        .then(() => {\n          history.push(\"/profile\");\n          window.location.reload();\n        })\n        .catch(() => {\n          this.setState({\n            loading: false\n          });\n        });\n    } else {\n      this.setState({\n        loading: false,\n      });\n    }\n  }\n\n  render() {\n    const { isLoggedIn, message } = this.props;\n\n    if (isLoggedIn) {\n      return <Redirect to=\"/profile\" />;\n    }\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleLogin}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label htmlFor=\"username\">Username</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"username\"\n                value={this.state.username}\n                onChange={this.onChangeUsername}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <label htmlFor=\"password\">Password</label>\n              <Input\n                type=\"password\"\n                className=\"form-control\"\n                name=\"password\"\n                value={this.state.password}\n                onChange={this.onChangePassword}\n                validations={[required]}\n              />\n            </div>\n\n            <div className=\"form-group\">\n              <button\n                className=\"btn btn-primary btn-block\"\n                disabled={this.state.loading}\n              >\n                {this.state.loading && (\n                  <span className=\"spinner-border spinner-border-sm\"></span>\n                )}\n                <span>Login</span>\n              </button>\n            </div>\n\n            {message && (\n              <div className=\"form-group\">\n                <div className=\"alert alert-danger\" role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { isLoggedIn } = state.auth;\n  const { message } = state.message;\n  return {\n    isLoggedIn,\n    message\n  };\n}\n\nexport default connect(mapStateToProps)(Login);\n","import {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT,\n  SET_MESSAGE,\n} from \"./types\";\n\nimport AuthService from \"../../services/auth.service\";\n\nexport const register = (username, email, password) => (dispatch) => {\n  return AuthService.register(username, email, password).then(\n    (response) => {\n      dispatch({\n        type: REGISTER_SUCCESS,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: response.data.message,\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: REGISTER_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const login = (username, password) => (dispatch) => {\n  return AuthService.login(username, password).then(\n    (data) => {\n\n      dispatch({\n        type: LOGIN_SUCCESS,\n        payload: { user: data },\n      });\n\n      return Promise.resolve();\n    },\n    (error) => {\n      const message =\n        (error.response &&\n          error.response.data &&\n          error.response.data.message) ||\n        error.message ||\n        error.toString();\n\n      dispatch({\n        type: LOGIN_FAIL,\n      });\n\n      dispatch({\n        type: SET_MESSAGE,\n        payload: message,\n      });\n\n      return Promise.reject();\n    }\n  );\n};\n\nexport const logout = () => (dispatch) => {\n  AuthService.logout();\n\n  dispatch({\n    type: LOGOUT,\n  });\n};\n","import React, { Component } from \"react\";\nimport Form from \"react-validation/build/form\";\nimport Input from \"react-validation/build/input\";\nimport CheckButton from \"react-validation/build/button\";\nimport { isEmail } from \"validator\";\n\nimport { connect } from \"react-redux\";\n\nimport { register } from \"../../actions/auth-actions/auth\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nconst email = (value) => {\n  if (!isEmail(value)) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This is not a valid email.\n      </div>\n    );\n  }\n};\n\nconst vusername = (value) => {\n  if (value.length < 3 || value.length > 20) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The username must be between 3 and 20 characters.\n      </div>\n    );\n  }\n};\n\nconst vpassword = (value) => {\n  if (value.length < 6 || value.length > 40) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        The password must be between 6 and 40 characters.\n      </div>\n    );\n  }\n};\n\nclass Register extends Component {\n  constructor(props) {\n    super(props);\n    this.handleRegister = this.handleRegister.bind(this);\n    this.onChangeUsername = this.onChangeUsername.bind(this);\n    this.onChangeEmail = this.onChangeEmail.bind(this);\n    this.onChangePassword = this.onChangePassword.bind(this);\n\n    this.state = {\n      username: \"\",\n      email: \"\",\n      password: \"\",\n      successful: false,\n    };\n  }\n\n  onChangeUsername(e) {\n    this.setState({\n      username: e.target.value,\n    });\n  }\n\n  onChangeEmail(e) {\n    this.setState({\n      email: e.target.value,\n    });\n  }\n\n  onChangePassword(e) {\n    this.setState({\n      password: e.target.value,\n    });\n  }\n\n  handleRegister(e) {\n    e.preventDefault();\n\n    this.setState({\n      successful: false,\n    });\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      this.props\n        .dispatch(\n          register(this.state.username, this.state.email, this.state.password)\n        )\n        .then(() => {\n          this.setState({\n            successful: true,\n          });\n        })\n        .catch(() => {\n          this.setState({\n            successful: false,\n          });\n        });\n    }\n  }\n\n  render() {\n    const { message } = this.props;\n\n    return (\n      <div className=\"col-md-12\">\n        <div className=\"card card-container\">\n          <img\n            src=\"//ssl.gstatic.com/accounts/ui/avatar_2x.png\"\n            alt=\"profile-img\"\n            className=\"profile-img-card\"\n          />\n\n          <Form\n            onSubmit={this.handleRegister}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            {!this.state.successful && (\n              <div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"username\">Username</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"username\"\n                    value={this.state.username}\n                    onChange={this.onChangeUsername}\n                    validations={[required, vusername]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"email\">Email</label>\n                  <Input\n                    type=\"text\"\n                    className=\"form-control\"\n                    name=\"email\"\n                    value={this.state.email}\n                    onChange={this.onChangeEmail}\n                    validations={[required, email]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <label htmlFor=\"password\">Password</label>\n                  <Input\n                    type=\"password\"\n                    className=\"form-control\"\n                    name=\"password\"\n                    value={this.state.password}\n                    onChange={this.onChangePassword}\n                    validations={[required, vpassword]}\n                  />\n                </div>\n\n                <div className=\"form-group\">\n                  <button className=\"btn btn-primary btn-block\">Sign Up</button>\n                </div>\n              </div>\n            )}\n\n            {message && (\n              <div className=\"form-group\">\n                <div className={ this.state.successful ? \"alert alert-success\" : \"alert alert-danger\" } role=\"alert\">\n                  {message}\n                </div>\n              </div>\n            )}\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { message } = state.message;\n  return {\n    message,\n  };\n}\n\nexport default connect(mapStateToProps)(Register);\n","export default function authHeader() {\n  const user = JSON.parse(localStorage.getItem(\"user\"));\n\n  if (user && user.accessToken) {\n    // For Spring Boot back-end\n    return { Authorization: \"Bearer \" + user.accessToken };\n\n    // for Node.js Express back-end\n    // return { \"x-access-token\": user.accessToken };\n  } else {\n    return {};\n  }\n}\n","import axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"/api/test/\";\n\nclass UserService {\n  getPublicContent() {\n    return axios.get(API_URL + \"all\");\n  }\n\n  getUserBoard() {\n    return axios.get(API_URL + \"user\", { headers: authHeader() });\n  }\n\n  getModeratorBoard() {\n    return axios.get(API_URL + \"mod\", { headers: authHeader() });\n  }\n\n  getAdminBoard() {\n    return axios.get(API_URL + \"admin\", { headers: authHeader() });\n  }\n}\n\nexport default new UserService();\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nexport default class Home extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getPublicContent().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response && error.response.data) ||\n            error.message ||\n            error.toString()\n        });\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport { Redirect } from 'react-router-dom';\nimport { connect } from \"react-redux\";\n\nclass Profile extends Component {\n\n  render() {\n    const { user: currentUser } = this.props;\n\n    if (!currentUser) {\n      return <Redirect to=\"/login\" />;\n    }\n\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>\n            <strong>{currentUser.username}</strong> Profile\n          </h3>\n        </header>\n        <p>\n          <strong>Token:</strong> {currentUser.accessToken.substring(0, 20)} ...{\" \"}\n          {currentUser.accessToken.substr(currentUser.accessToken.length - 20)}\n        </p>\n        <p>\n          <strong>Id:</strong> {currentUser.id}\n        </p>\n        <p>\n          <strong>Email:</strong> {currentUser.email}\n        </p>\n        <strong>Authorities:</strong>\n        <ul>\n          {currentUser.roles &&\n            currentUser.roles.map((role, index) => <li key={index}>{role}</li>)}\n        </ul>\n      </div>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(Profile);\n","const eventBus = {\n  on(event, callback) {\n    document.addEventListener(event, (e) => callback(e.detail));\n  },\n  dispatch(event, data) {\n    document.dispatchEvent(new CustomEvent(event, { detail: data }));\n  },\n  remove(event, callback) {\n    document.removeEventListener(event, callback);\n  },\n};\n\nexport default eventBus;\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nimport EventBus from \"../../common/EventBus\";\n\nexport default class BoardUser extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getUserBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nimport EventBus from \"../../common/EventBus\";\n\nexport default class BoardModerator extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getModeratorBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","import React, { Component } from \"react\";\n\nimport UserService from \"../../services/user.service\";\n\nimport EventBus from \"../../common/EventBus\";\n\nexport default class BoardAdmin extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      content: \"\"\n    };\n  }\n\n  componentDidMount() {\n    UserService.getAdminBoard().then(\n      response => {\n        this.setState({\n          content: response.data\n        });\n      },\n      error => {\n        this.setState({\n          content:\n            (error.response &&\n              error.response.data &&\n              error.response.data.message) ||\n            error.message ||\n            error.toString()\n        });\n\n        if (error.response && error.response.status === 401) {\n          EventBus.dispatch(\"logout\");\n        }\n      }\n    );\n  }\n\n  render() {\n    return (\n      <div className=\"container\">\n        <header className=\"jumbotron\">\n          <h3>{this.state.content}</h3>\n        </header>\n      </div>\n    );\n  }\n}\n","// import http from \"../http-common\";\nimport axios from \"axios\";\nimport authHeader from \"./auth-header\";\n\nconst API_URL = \"http://localhost:8080/api/tutorial/\";\n\n\nclass TutorialDataService {\n\n  getAll() {\n    return axios.get(API_URL + \"tutorials\", { headers: authHeader() } );\n  }\n\n  updateStatus(id) {\n    return axios.put(API_URL + `updateStatus/${id}`, { headers: authHeader() } );\n  }\n\n  delete(id) {\n    return axios.delete(API_URL + `tutorials/${id}`, { headers: authHeader() });\n  }\n\n  create(data) {\n    return axios.post(API_URL + \"tutorials\", data, { headers: authHeader() });\n  }\n\n  update(id, data) {\n    return axios.put(API_URL + `tutorials/${id}`, data, { headers: authHeader() } );\n  }\n\n   findByTitle(title) {\n    return axios.get(API_URL + `tutorials?title=${title}`, { headers: authHeader() });\n  }\n \n}\n\nexport default new TutorialDataService();","import {\n  CREATE_TUTORIAL,\n  RETRIEVE_TUTORIALS,\n  UPDATE_TUTORIAL,\n  DELETE_TUTORIAL,\n  TOGGLE_FORM,\n  CLOSE_FORM,\n  OPEN_FORM,\n  EDIT_TASK,\n  FILTER_TABLE,\n  SORT_TUTORIAL\n} from \"./types\";\n\nimport TutorialDataService from \"./../../services/tutorial.service\";\n\nexport const createTutorial = (name, status) => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.create({ name, status });\n    \n    dispatch({\n      type: CREATE_TUTORIAL,\n      payload: res.data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const retrieveTutorials = () => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.getAll();\n\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const findTutorialsByTitle = (title) => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.findByTitle(title);\n\n    dispatch({\n      type: RETRIEVE_TUTORIALS,\n      payload: res.data,\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const updateTutorial = (id, data) => async (dispatch) => {\n  try {\n    const res = await TutorialDataService.update(id, data);\n\n    dispatch({\n      type: UPDATE_TUTORIAL,\n      payload: data,\n    });\n\n    return Promise.resolve(res.data);\n  } catch (err) {\n    return Promise.reject(err);\n  }\n};\n\nexport const deleteTutorial = (id) => async (dispatch) => {\n  try {\n    await TutorialDataService.delete(id);\n\n    dispatch({\n      type: DELETE_TUTORIAL,\n      payload: { id },\n    });\n  } catch (err) {\n    console.log(err);\n  }\n};\n\nexport const filterTutorial = (filter) => (dispatch) => {\n\tdispatch({\n\t\ttype: FILTER_TABLE,\n\t\tfilter\n\t});\n};\n\nexport const sortTutorial = (sort) => (dispatch) => {\n\tdispatch({\n\t\ttype: SORT_TUTORIAL,\n\t\tsort\n\t});\n};\n\nexport const editTutorial = (tutorial) => (dispatch) => {\n\tdispatch({\n\t\ttype: EDIT_TASK,\n\t\tpayload: tutorial\n\t});\n};\n\nexport const toggleForm = () => (dispatch) => {\n  dispatch({\n    type: TOGGLE_FORM,\n  });\n};\n\nexport const openForm = () => (dispatch) => {\n  dispatch({\n    type: OPEN_FORM,\n  });\n};\n\nexport const closeForm = () => (dispatch) => {\n  dispatch({\n    type: CLOSE_FORM,\n  });\n};\n\n","import React, { Component } from \"react\";\nimport {connect} from 'react-redux';\nimport { updateTutorial, deleteTutorial, openForm, editTutorial } from \"../../actions/tutorial-actions/tutorials\";\n\nclass TutorialItem extends Component {\n\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n    };\n\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n\n    if (user) {\n      this.setState({\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  onEditTask = () => {\n    this.props.openForm();\n    this.props.editTutorial(this.props.tutorial);\n}\n\n  onDeleteTutorial = () => {\n    this.props.deleteTutorial(this.props.tutorial.id);\n  }\n\n  findIndex = (tutorials, id) => {\n    var result = -1;\n  \n    tutorials.forEach((tutorial, index) => {\n        if(tutorial.id === id){\n            result = index;\n        }\n    });\n  \n    return result;\n  }\n\n  onUpdateStatus = () => {\n    \n    var data = {\n      id : '',\n      name: '',\n      status: false,\n    };\n\n    var { tutorials } = this.props;\n\n    var index = this.findIndex(tutorials, this.props.tutorial.id);\n\n    tutorials[index].status = !tutorials[index].status;\n\n    data = tutorials[index];\n\n    this.props.updateTutorial(this.props.tutorial.id, data);\n  }\n\n  render() {\n    var { tutorial, index } = this.props;\n\n    const {showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <tr>\n        <td>{index + 1}</td>\n        <td>{tutorial.name}</td>\n\n        <td className=\"text-center\">\n          <button\n            className = { \n              tutorial.status === true\n                ? \"btn btn-danger\"\n                : \"btn btn-primary\"\n            }\n            onClick={this.onUpdateStatus} disabled={!(showAdminBoard || showModeratorBoard)}\n          >\n            {tutorial.status === true ? \"Kích Hoạt\" : \"Ẩn\"}\n          </button>\n        \n        </td>\n\n        <td className=\"text-center\">\n        \n          <button\n            type=\"button\"\n            className=\"btn btn-warning\"\n            onClick={this.onEditTask}  disabled={!(showAdminBoard || showModeratorBoard)}\n          >\n            <span className=\"fa fa-pencil mr-5\"></span>Sửa\n          </button>\n          &nbsp;\n          <button\n            type=\"button\"\n            className=\"btn btn-danger\"\n            onClick={this.onDeleteTutorial} disabled={!(showAdminBoard || showModeratorBoard)}\n          >\n            <span className=\"fa fa-trash mr-5\"></span>Xóa\n          </button>\n        </td>\n      </tr>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    tutorials: state.tutorials,\n    user\n  };\n}\n\nexport default connect(mapStateToProps, {updateTutorial, deleteTutorial, openForm, editTutorial})(TutorialItem);\n\n","import React, { Component } from \"react\";\nimport TutorialItem from \"./tutorial-Item\";\nimport { connect } from \"react-redux\";\nimport {\n  retrieveTutorials,\n  filterTutorial,\n} from \"../../actions/tutorial-actions/tutorials\";\n\nclass TutorialList extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      filterName: \"\",\n      filterStatus: -1,\n    };\n  }\n\n  componentDidMount = () => {\n    this.props.retrieveTutorials();\n  };\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n\n    var filter = {\n      name: name === \"filterName\" ? value : this.state.filterName,\n      status: name === \"filterStatus\" ? value : this.state.filterStatus,\n    };\n\n    this.props.filterTutorial(filter);\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  render() {\n    var { tutorials, filterTable, sortTutorial } = this.props;\n    var { filterName, filterStatus } = this.state;\n\n    if (tutorials) {\n      if (filterTable.name) {\n        tutorials = tutorials.filter((tutorial) => {\n          return tutorial.name.toLowerCase().indexOf(filterTable.name) !== -1;\n        });\n      }\n\n      tutorials = tutorials.filter((tutorial) => {\n        if (filterTable.status === -1) {\n          return tutorials;\n        } else {\n          return tutorial.status === (filterTable.status === 1 ? true : false);\n        }\n      });\n\n      if (sortTutorial.by === \"name\") {\n        tutorials.sort((a, b) => {\n          if (a.name > b.name) return sortTutorial.value;\n          else if (a.name < b.name) return -sortTutorial.value;\n          else return 0;\n        });\n      } else {\n        tutorials.sort((a, b) => {\n          if (a.status > b.status) return -sortTutorial.value;\n          else if (a.status < b.status) return sortTutorial.value;\n          else return 0;\n        });\n      }\n\n      var elmTutorials = tutorials.map((tutorial, index) => {\n        return (\n          <TutorialItem key={tutorial.id} index={index} tutorial={tutorial} />\n        );\n      });\n    }\n\n    return (\n      <table className=\"table table-bordered table-hover mt-15\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">STT</th>\n            <th className=\"text-center\">Tên</th>\n            <th className=\"text-center\">Trạng Thái</th>\n            <th className=\"text-center\">Hành Động</th>\n          </tr>\n        </thead>\n        <tbody>\n          <tr>\n            <td></td>\n            <td>\n              <input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"filterName\"\n                value={filterName}\n                onChange={this.onChange}\n              />\n            </td>\n            <td>\n              <select\n                className=\"form-control\"\n                name=\"filterStatus\"\n                value={filterStatus}\n                onChange={this.onChange}\n              >\n                <option value=\"-1\">Tất Cả</option>\n                <option value=\"0\">Ẩn</option>\n                <option value=\"1\">Kích Hoạt</option>\n              </select>\n            </td>\n            <td></td>\n          </tr>\n\n          {elmTutorials}\n        </tbody>\n      </table>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    tutorials: state.tutorials,\n    filterTable: state.filterTable,\n    sortTutorial: state.sortTutorial,\n  };\n};\n\nexport default connect(mapStateToProps, { retrieveTutorials, filterTutorial })(\n  TutorialList\n);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport {\n  createTutorial,\n  closeForm,\n  updateTutorial,\n} from \"../../actions/tutorial-actions/tutorials\";\n\nimport Input from \"react-validation/build/input\";\nimport Form from \"react-validation/build/form\";\nimport CheckButton from \"react-validation/build/button\";\n\nconst required = (value) => {\n  if (!value) {\n    return (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        This field is required!\n      </div>\n    );\n  }\n};\n\nclass TutorialForm extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      id: \"\",\n      name: \"\",\n      status: false,\n    };\n  }\n\n  componentDidMount() {\n    if (this.props.itemEditing) {\n      this.setState({\n        id: this.props.itemEditing.id,\n        name: this.props.itemEditing.name,\n        status: this.props.itemEditing.status,\n      });\n    }\n  }\n\n  componentWillReceiveProps(nextProps) {\n    if (nextProps && nextProps.itemEditing) {\n      this.setState({\n        id: nextProps.itemEditing.id,\n        name: nextProps.itemEditing.name,\n        status: nextProps.itemEditing.status,\n      });\n    } else if (!nextProps.itemEditing) {\n      this.setState({\n        id: \"\",\n        name: \"\",\n        status: false,\n      });\n    }\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n\n    var name = target.name;\n    var value = target.value;\n\n    if (name === \"status\") {\n      value = target.value === \"true\" ? true : false;\n    }\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  onSubmit = (event) => {\n    event.preventDefault();\n\n    const { id, name, status } = this.state;\n\n    var data = {\n      id,\n      name,\n      status,\n    };\n\n    this.form.validateAll();\n\n    if (this.checkBtn.context._errors.length === 0) {\n      if (!this.state.id) {\n        this.props.createTutorial(name, status);\n      } else {\n        this.props.updateTutorial(id, data);\n      }\n\n      this.onClear();\n      this.onCloseForm();\n    } \n  \n  };\n\n  onCloseForm = () => {\n    this.props.closeForm();\n  };\n\n  onClear = () => {\n    this.setState({\n      id: \"\",\n      name: \"\",\n      status: false\n    });\n  };\n\n  render() {\n    if (!this.props.isDisplayForm) return \"\";\n\n    var { id, name, status } = this.state;\n\n    return (\n      <div className=\"panel panel-warning\">\n        <div className=\"panel-heading\">\n          <h3 className=\"panel-title\">\n            {id !== \"\" ? \"Cập Nhật Công Việc\" : \"Thêm Công Việc\"}\n            <span\n              className=\"bi bi-x text-right\"\n              onClick={this.onCloseForm}\n            ></span>\n          </h3>\n        </div>\n\n        <div className=\"panel-body\">\n          <Form\n            onSubmit={this.onSubmit}\n            ref={(c) => {\n              this.form = c;\n            }}\n          >\n            <div className=\"form-group\">\n              <label>Tên :</label>\n              <Input\n                type=\"text\"\n                className=\"form-control\"\n                name=\"name\"\n                value={name}\n                onChange={this.onChange}\n                validations={[required]}\n              />\n            </div>\n            <label>Trạng Thái :</label>\n            <select\n              className=\"form-control\"\n              name=\"status\"\n              value={status}\n              onChange={this.onChange}\n            >\n              <option value={true}>Kích Hoạt</option>\n              <option value={false}>Ẩn</option>\n            </select>\n            <br />\n            <div className=\"text-center\">\n              <button\n                type=\"submit\"\n                className=\"btn btn-warning\"\n              >\n                Lưu Lại\n              </button>\n              &nbsp;\n              <button\n                type=\"button\"\n                className=\"btn btn-danger\"\n                onClick={this.onClear}\n              >\n                Xoá Trắng\n              </button>\n            </div>\n\n            <CheckButton\n              style={{ display: \"none\" }}\n              ref={(c) => {\n                this.checkBtn = c;\n              }}\n            />\n          </Form>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    isDisplayForm: state.isDisplayForm,\n    itemEditing: state.itemEditing,\n  };\n};\n\n// const mapDispatchToProps = (dispatch, props) => {\n//     return{\n//         onSaveTask : (task) => {\n//             dispatch(actions.saveTask(task));\n//         },\n//         onCloseForm: () => {\n//             dispatch(actions.closeForm());\n//         }\n//     }\nexport default connect(mapStateToProps, {\n  createTutorial,\n  closeForm,\n  updateTutorial,\n})(TutorialForm);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { findTutorialsByTitle, retrieveTutorials } from \"../../actions/tutorial-actions/tutorials\";\n\nclass TutorialSearch extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      keyword: \"\",\n    };\n  }\n\n  onChange = (event) => {\n    var target = event.target;\n    var name = target.name;\n    var value = target.value;\n\n    this.setState({\n      [name]: value,\n    });\n  };\n\n  clearKeyword = () => {\n    this.setState({\n      keyword: \"\",\n    });\n\n    this.props.retrieveTutorials();\n  };\n\n  findByTitle = () => {\n    this.props.findTutorialsByTitle(this.state.keyword);\n  };\n\n  render() {\n    var { keyword } = this.state;\n\n    return (\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n        <div className=\"input-group\">\n          <input\n            type=\"text\"\n            className=\"form-control\"\n            name=\"keyword\"\n            placeholder=\"Nhập từ khóa...\"\n            value={keyword}\n            onChange={this.onChange}\n          />\n\n          <span\n            className=\"bi bi-x text-right mt-10 mr-5\"\n            onClick={this.clearKeyword}\n          ></span>\n\n          <span className=\"input-group-btn\">\n            <button\n              className=\"btn btn-primary\"\n              type=\"button\"\n              onClick={this.findByTitle}\n            >\n              <span className=\"fa fa-search mr-5\"></span>Tìm\n            </button>\n          </span>\n        </div>\n      </div>\n    );\n  }\n}\n\nexport default connect(null, { findTutorialsByTitle, retrieveTutorials })(TutorialSearch);\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { sortTutorial } from \"../../actions/tutorial-actions/tutorials\";\n\nclass TutorialSort extends Component {\n  onClick = (sortBy, sortValue) => {\n    this.props.sortTutorial({\n      by: sortBy,\n      value: sortValue,\n    });\n  };\n\n  render() {\n\n    return (\n      <div className=\"col-xs-6 col-sm-6 col-md-6 col-lg-6\">\n        <div className=\"dropdown\">\n          <button\n            className=\"btn btn-primary dropdown-toggle\"\n            type=\"button\"\n            id=\"dropdownMenu1\"\n            data-toggle=\"dropdown\"\n          >\n            Sắp Xếp\n          </button>\n\n          <ul className=\"dropdown-menu\" aria-labelledby=\"dropdownMenu1\">\n            <li onClick={() => this.onClick(\"name\", 1)}>\n              <button\n                type=\"button\"\n                className={\n                  this.props.sortTutorial.by === \"name\" && this.props.sortTutorial.value === 1 ? \"sort_selected\" : \"\"\n                }\n              >\n                <span className=\"fa fa-sort-alpha-asc pr-5\">Tên A-Z</span>\n              </button>\n            </li>\n            <li onClick={() => this.onClick(\"name\", -1)}>\n              <button\n                button=\"button\"\n                className={\n                  this.props.sortTutorial.by === \"name\" && this.props.sortTutorial.value === -1 ? \"sort_selected\" : \"\"\n                }\n              >\n                <span className=\"fa fa-sort-alpha-desc pr-5\">Tên Z-A</span>\n              </button>\n            </li>\n            <li role=\"separator\" className=\"divider\"></li>\n            <li onClick={() => this.onClick(\"status\", 1)}>\n              <button\n                button=\"button\"\n                className={\n                  this.props.sortTutorial.by === \"status\" && this.props.sortTutorial.value === 1\n                    ? \"sort_selected\"\n                    : \"\"\n                }\n              >\n                Trạng Thái Kích Hoạt\n              </button>\n            </li>\n            <li onClick={() => this.onClick(\"status\", -1)}>\n              <button\n                button=\"button\"\n                className={\n                  this.props.sortTutorial.by === \"status\" && this.props.sortTutorial.value === -1\n                    ? \"sort_selected\"\n                    : \"\"\n                }\n              >\n                Trạng Thái Ẩn\n              </button>\n            </li>\n          </ul>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  return {\n    sortTutorial: state.sortTutorial,\n  };\n};\n\nexport default connect(mapStateToProps, { sortTutorial })(TutorialSort);\n","import React, {Component} from 'react';\nimport TutorialSearch from './tutorial-search';\nimport TutorialSort from './tutorial-sort';\n\nclass TutorialControl extends Component {\n\n    render() {\n        return(\n            <div className=\"row mt-15\">\n                <TutorialSearch/>\n                <TutorialSort/>\n            </div>\n        );\n    }\n}\n\nexport default TutorialControl;\n","import React, { Component } from \"react\";\nimport TutorialList from \"./tutorial-list\";\nimport { connect } from \"react-redux\";\nimport { toggleForm } from \"../../actions/tutorial-actions/tutorials\";\n\nimport TutorialForm from \"./tutorial-form\";\nimport TutorialControl from \"./tutorial-control\";\n\nclass Tutorial extends Component {\n  constructor(props) {\n    super(props);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n    };\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n\n    if (user) {\n      this.setState({\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n  }\n\n  onToggleForm = () => {\n    this.props.toggleForm();\n  };\n\n  render() {\n    var { isDisplayForm } = this.props;\n\n    const { showModeratorBoard, showAdminBoard } = this.state;\n\n    return (\n      <div className=\"container\">\n        <div className=\"text-center\">\n          <h1>Quản Lý Công Việc</h1>\n          <hr />\n        </div>\n\n        <div className=\"row\">\n          <div\n            className={\n              isDisplayForm ? \"col-xs-4 col-sm-4 col-md-4 col-lg-4\" : \"\"\n            }\n          >\n            <TutorialForm />\n          </div>\n\n          <div\n            className={\n              isDisplayForm\n                ? \"col-xs-8 col-sm-8 col-md-8 col-lg-8\"\n                : \"col-xs-12 col-sm-12 col-md-12 col-lg-12\"\n            }\n          >\n            <button\n              type=\"button\"\n              className=\"btn btn-primary\"\n              onClick={this.onToggleForm}\n              disabled={!(showAdminBoard || showModeratorBoard)}\n            >\n              <span className=\"fa fa-plus\"></span>Thêm Công Việc\n            </button>\n\n            <TutorialControl />\n\n            <div className=\"row mt-15\">\n              <div className=\"col-xs-12 col-sm-12 col-md-12 col-lg-12\">\n                <TutorialList></TutorialList>\n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n    );\n  }\n}\n\nconst mapStateToProps = (state) => {\n  const { user } = state.auth;\n  \n  return {\n    isDisplayForm: state.isDisplayForm,\n    user,\n  };\n};\n\nexport default connect(mapStateToProps, { toggleForm })(Tutorial);\n","import { createBrowserHistory } from \"history\";\n\nexport const history = createBrowserHistory();\n","import React, { Component } from \"react\";\nimport { connect } from \"react-redux\";\nimport { Router, Switch, Route, Link } from \"react-router-dom\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nimport 'bootstrap-icons/font/bootstrap-icons.css';\n\nimport \"./App.css\";\n\nimport Login from \"./components/auth-components/login.component\";\nimport Register from \"./components/auth-components/register.component\";\nimport Home from \"./components/auth-components/home.component\";\nimport Profile from \"./components/auth-components/profile.component\";\nimport BoardUser from \"./components/auth-components/board-user.component\";\nimport BoardModerator from \"./components/auth-components/board-moderator.component\";\nimport BoardAdmin from \"./components/auth-components/board-admin.component\";\n\nimport Tutorial from \"./components/tutorial-components/tutorial\";\n\nimport { logout } from \"./actions/auth-actions/auth\";\n\nimport { clearMessage } from \"./actions/auth-actions/message\";\n\nimport { history } from \"./helpers/history\";\n\n// import AuthVerify from \"./common/auth-verify\";\nimport EventBus from \"./common/EventBus\";\n\nclass App extends Component {\n  constructor(props) {\n    super(props);\n    this.logOut = this.logOut.bind(this);\n\n    this.state = {\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    };\n\n    history.listen((location) => {\n      props.dispatch(clearMessage()); // clear message when changing location\n    });\n  }\n\n  componentDidMount() {\n    const user = this.props.user;\n\n    if (user) {\n      this.setState({\n        currentUser: user,\n        showModeratorBoard: user.roles.includes(\"ROLE_MODERATOR\"),\n        showAdminBoard: user.roles.includes(\"ROLE_ADMIN\"),\n      });\n    }\n\n    EventBus.on(\"logout\", () => {\n      this.logOut();\n    });\n  }\n\n  componentWillUnmount() {\n    EventBus.remove(\"logout\");\n  }\n\n  logOut() {\n    this.props.dispatch(logout());\n    this.setState({\n      showModeratorBoard: false,\n      showAdminBoard: false,\n      currentUser: undefined,\n    });\n  }\n\n  render() {\n    const { currentUser, showModeratorBoard, showAdminBoard } = this.state;\n     \n    return (\n      <Router history={history}>\n        <div>\n          <nav className=\"navbar navbar-expand navbar-dark bg-dark\">\n            <Link to={\"/\"} className=\"navbar-brand\">\n              bezKoder\n            </Link>\n            <div className=\"navbar-nav mr-auto\">\n              <li className=\"nav-item\">\n                <Link to={\"/home\"} className=\"nav-link\">\n                  Home\n                </Link>\n              </li>\n\n              {showModeratorBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/mod\"} className=\"nav-link\">\n                    Moderator Board\n                  </Link>\n                </li>\n              )}\n\n              {showAdminBoard && (\n                <li className=\"nav-item\">\n                  <Link to={\"/admin\"} className=\"nav-link\">\n                    Admin Board\n                  </Link>\n                </li>\n              )}\n\n              {currentUser && (\n                <li className=\"nav-item\">\n                  <Link to={\"/user\"} className=\"nav-link\">\n                    User\n                  </Link>\n                </li>\n              )}\n\n              <li className=\"nav-item\">\n                <Link to={\"/tutorial\"} className=\"nav-link\">\n                  Tutorial\n                </Link>\n              </li>\n\n            </div>\n\n            {currentUser ? (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/profile\"} className=\"nav-link\">\n                    {currentUser.username}\n                  </Link>\n                </li>\n                <li className=\"nav-item\">\n                  <a href=\"/login\" className=\"nav-link\" onClick={this.logOut}>\n                    LogOut\n                  </a>\n                </li>\n              </div>\n            ) : (\n              <div className=\"navbar-nav ml-auto\">\n                <li className=\"nav-item\">\n                  <Link to={\"/login\"} className=\"nav-link\">\n                    Login\n                  </Link>\n                </li>\n\n                <li className=\"nav-item\">\n                  <Link to={\"/register\"} className=\"nav-link\">\n                    Sign Up\n                  </Link>\n                </li>\n              </div>\n            )}\n          </nav>\n\n          <div className=\"container mt-3\">\n            <Switch>\n              <Route exact path={[\"/\", \"/home\"]} component={Home} />\n              <Route exact path=\"/login\" component={Login} />\n              <Route exact path=\"/register\" component={Register} />\n              <Route exact path=\"/profile\" component={Profile} />\n              <Route path=\"/user\" component={BoardUser} />\n              <Route path=\"/mod\" component={BoardModerator} />\n              <Route path=\"/admin\" component={BoardAdmin} />\n              <Route path=\"/tutorial\" component={Tutorial} />\n            </Switch>\n          </div>\n\n          {/* <AuthVerify logOut={this.logOut}/> */}\n        </div>\n      </Router>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  const { user } = state.auth;\n  return {\n    user,\n  };\n}\n\nexport default connect(mapStateToProps)(App);\n","import { SET_MESSAGE, CLEAR_MESSAGE } from \"./types\";\n\nexport const setMessage = (message) => ({\n  type: SET_MESSAGE,\n  payload: message,\n});\n\nexport const clearMessage = () => ({\n  type: CLEAR_MESSAGE,\n});\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport store from \"./store\";\nimport \"./index.css\";\nimport 'bootstrap/dist/js/bootstrap.bundle.min';\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\nserviceWorker.unregister();\n"],"sourceRoot":""}